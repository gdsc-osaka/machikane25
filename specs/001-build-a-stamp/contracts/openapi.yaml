openapi: 3.1.0
info:
  title: Stamp Rally Web Experience API
  version: 0.1.0
  description: >
    Backend routes exposed via Next.js App Router for secure operations that cannot
    be performed purely from the client (token validation, survey proxy, reward issuance).
servers:
  - url: https://fes2025.gdsc-osaka.jp
paths:
  /api/stamps/award:
    post:
      summary: Validate NFC token and award stamp
      description: >
        Called by the stamp page after verifying Firebase auth to exchange a signed NFC token
        for the corresponding stamp. Ensures idempotency and logs audit records.
      security:
        - firebaseAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AwardStampRequest'
      responses:
        '200':
          description: Stamp award result
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AwardStampResponse'
        '400':
          description: Invalid token payload or request format
        '401':
          description: Missing or invalid Firebase auth context
        '409':
          description: Duplicate stamp already awarded
        '423':
          description: Maintenance mode prevents awarding this stamp
  /api/stamps/progress:
    get:
      summary: Fetch attendee progress snapshot
      description: >
        Returns cached stamp completion counts and eligibility flags for server-rendered pages.
        Revalidates against Firestore and returns maintenance notices.
      security:
        - firebaseAuth: []
      responses:
        '200':
          description: Progress snapshot
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProgressSnapshot'
        '401':
          description: Unauthorized attendee
  /api/survey/submit:
    post:
      summary: Proxy survey submission to Google Forms
      description: >
        Stores local audit record then forwards attendee feedback to the configured Google Form,
        returning success or error messaging for the UI.
      security:
        - firebaseAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SurveySubmission'
      responses:
        '200':
          description: Submission accepted and recorded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SurveySubmissionResult'
        '400':
          description: Validation failure
        '409':
          description: Survey already completed
        '502':
          description: Upstream Google Form error
  /api/reward/issue:
    post:
      summary: Issue reward QR payload for eligible attendee
      description: >
        Confirms survey completion and stamp eligibility, persists QR metadata, and returns
        encode-ready payload for client-side rendering.
      security:
        - firebaseAuth: []
      responses:
        '200':
          description: Reward payload issued
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RewardIssueResponse'
        '400':
          description: Attendee not eligible for reward
        '401':
          description: Unauthorized attendee
        '423':
          description: Maintenance mode prevents issuance
  /api/reward/redeem:
    post:
      summary: Mark reward as redeemed by staff
      description: >
        Staff-only endpoint that validates admin auth, checks QR payload hash, and records
        redemption status for audit visibility.
      security:
        - firebaseAuthAdmin: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RewardRedeemRequest'
      responses:
        '200':
          description: Redemption outcome
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RewardRedeemResponse'
        '403':
          description: Caller lacks admin privileges
        '404':
          description: Reward payload not found or already redeemed
components:
  securitySchemes:
    firebaseAuth:
      type: http
      scheme: bearer
      bearerFormat: Firebase
    firebaseAuthAdmin:
      type: http
      scheme: bearer
      bearerFormat: FirebaseAdmin
  schemas:
    AwardStampRequest:
      type: object
      required:
        - token
        - locale
      properties:
        token:
          type: string
          description: Signed NFC token delivered via URL
        locale:
          type: string
          enum: [ja, en]
    AwardStampResponse:
      type: object
      required:
        - status
        - stampId
        - message
      properties:
        status:
          type: string
          enum: [granted, duplicate, invalid, maintenance]
        stampId:
          type: string
        message:
          type: string
        progress:
          $ref: '#/components/schemas/ProgressSnapshot'
    ProgressSnapshot:
      type: object
      required:
        - stamps
        - remaining
        - surveyCompleted
        - rewardEligible
        - maintenance
      properties:
        stamps:
          type: array
          items:
            type: object
            required:
              - id
              - label
              - completed
            properties:
              id:
                type: string
              label:
                type: string
              completed:
                type: boolean
        remaining:
          type: integer
          minimum: 0
        surveyCompleted:
          type: boolean
        rewardEligible:
          type: boolean
        maintenance:
          type: object
          properties:
            status:
              type: string
              enum: [online, degraded, maintenance]
            messageJa:
              type: string
            messageEn:
              type: string
    SurveySubmission:
      type: object
      required:
        - satisfactionPhoto
        - satisfactionArt
        - satisfactionStamp
        - freeText
      properties:
        satisfactionPhoto:
          type: integer
          minimum: 1
          maximum: 5
        satisfactionArt:
          type: integer
          minimum: 1
          maximum: 5
        satisfactionStamp:
          type: integer
          minimum: 1
          maximum: 5
        freeText:
          type: string
          maxLength: 500
    SurveySubmissionResult:
      type: object
      required:
        - status
      properties:
        status:
          type: string
          enum: [success, retry]
        message:
          type: string
    RewardIssueResponse:
      type: object
      required:
        - payload
        - expiresAt
      properties:
        payload:
          type: string
          description: Canonical data string to feed into QR generator
        expiresAt:
          type: string
          format: date-time
        hash:
          type: string
          description: Integrity hash stored with attendee profile
    RewardRedeemRequest:
      type: object
      required:
        - payload
      properties:
        payload:
          type: string
          description: Raw QR payload scanned from attendee device
    RewardRedeemResponse:
      type: object
      required:
        - status
        - attendee
      properties:
        status:
          type: string
          enum: [success, duplicate, invalid]
        attendee:
          type: object
          properties:
            uid:
              type: string
            rewardRedeemedAt:
              type: string
              format: date-time
